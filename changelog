# Changelog

All notable changes to this project will be documented in this file.

---

## [v1.0.3] – 2025-05-03

### Enhancements:
- Added support for **Advanced Mode**, allowing each block to repeat a specified number of times
- Implemented **Load Preset Snippet** modal for pasting and importing JSON-formatted presets
- Exported preset snippets are now generated as valid, formatted JSON blocks for easier reuse
- Improved text scaling for the optional QR code label to prevent overflow on smaller canvas sizes
- Added visual formatting improvements to label rendering under the QR image
- Automatically loads a newly pasted preset after importing via snippet modal
- Enhanced styling and spacing consistency in the right sidebar instruction box

### UI & UX Adjustments:
- Refined alignment and padding in input fields and controls
- Improved font sizing and spacing in toolbox and canvas blocks
- Label input field now uses centralized styling and consistent font sizing
- Increased default canvas width slightly for better layout balance
- Moved snippet UI into a check for advanced mode, using advanced mode as debug/experimental

### Under-the-Hood:
- Cleaned up logic for preset parsing and backward compatibility with legacy formats
- Updated canvas rendering logic to dynamically scale text if label is wider than the QR area
- Internal data structure for saved presets now ensures `iterations` values are preserved
- Consolidated rendering logic for blocks to reduce duplication and support dynamic features

---

## \[v1.0.2] – 2025-05-03

### New Features

* Advanced Mode toggle: Enables block-level `iterations` (e.g., repeat a Tab 5× for 5 tab inputs)
* QR Label Input: Users can now add a custom label beneath the QR code
* Preset labels: Presets now store and restore the associated QR label
* Visual iteration tags: Blocks display `×N` when repeated in Advanced Mode

### Preset Format Update

* Presets are now stored as an object with a `label` and `blocks`, enabling richer metadata

  ```js
  {
    label: "My Label",
    blocks: [{ type: "text", label: "Example", iterations: 1 }]
  }
  ```
* Backward compatibility: Legacy array-based presets are automatically wrapped and converted

### UI and UX Improvements

* QR preview now uses a custom canvas to render both the code and its label in one image
* Copy-to-clipboard now includes this labeled composite image
* Minor UI polish: smaller spacing tweaks, consistent hover effects, and enhanced block visuals
* Color palette adjusted for visual harmony and accessibility (color blindness awareness)

### Improvements and Fixes

* `copySelectedPresetAsDefaultSnippet()` now reflects new preset structure (with label and iterations)
* Tooltip and layout alignment adjustments
* Code cleanup and improved consistency in `BlockManager`, `Drag`, and `PresetsManager`

---

## \[v1.0.1] – 2025-05-02

### UI and UX Improvements

* Refactored sidebar panels into modular sections: Toolbox, Presets, Controls, and QR Preview
* Right-side panel now includes dedicated Trash and Quick Tips sections
* Introduced Export Preset Snippet button for sharing preset configurations
* Added buttons to open GitHub and Feedback Form directly from the interface
* New color palette and shadows for a cleaner, more polished look
* Improved button styling (consistent `btn` class usage)
* Color-coded tab and return blocks in both toolbox and canvas
* Reintroduced tooltips that were lost during testing
* Enlarged `presetSelect` font for better readability
* Added version number display in header

### Code Improvements

* Consolidated and cleaned up repetitive CSS styles
* Defined new CSS variables: `--color-scarlet`, `--color-blue`, `--color-purple`, `--color-black`, `--color-grey`
* Reorganized HTML layout for improved readability and maintainability

### User Experience Notes

* Exported preset snippets can be submitted via the [feedback form](https://forms.office.com/r/BQ31NpaecJ) for potential inclusion as default templates in future updates

---

## \[v1.0.0] – 2024-04-29

### Initial Release

#### Features

* Drag-and-drop block canvas for visually structuring QR data
* Block types supported:
  * Text
  * Tabs (`\t`)
  * Returns (`\r`)
* Live QR code preview
* Preset manager: save, load, and delete layouts using browser storage
* Option to copy QR code as PNG to clipboard
* Trash dropzone for deleting blocks
* Desktop-optimized responsive layout

#### Known Limitations

* Touch input (mobile) support is limited; desktop interaction is required for full functionality
* Clipboard image copy may not function on non-HTTPS sites or unsupported browsers
* Mobile usability enhancements and long-press interaction support are planned for future versions

---
